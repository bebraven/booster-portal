common: &default_settings
  # Heroku uses DATABASE_URL to configure the connection to the postgres addon
  # However, we can't just use that directly as some of these articles talk about:
  #
  #   https://edgeguides.rubyonrails.org/configuring.html#configuring-a-database
  #   https://devcenter.heroku.com/articles/heroku-postgresql#connecting-in-rails
  #   https://github.com/rails/rails/pull/13582/files
  #
  # b/c we're on Rails 4.0 and there are things across the Canvas codebase that rely on database.yml,
  # like the switchman gem. So, we continue to use this file and if the DATABASE_URL is set,
  # we parse it into these PGXXX env vars in config/application.rb
  #
  # Keep this is mind b/c if a DATABASE_URL is set it will take precendence over any PGXXX variables!
  # (except the database name in the test environment since we don't want to be able to override that 
  #  and accidentally test against a real database)
  adapter: postgresql
  timeout: <%= ENV.fetch('PGCONNECT_TIMEOUT', 5000) %>
  encoding: utf8
  host: <%= ENV['PGHOST'] %> 
  database: <%= ENV['PGDATABASE'] %>
  username: <%= ENV['PGUSER'] %>
  password: <%= ENV['PGPASSWORD'] %>
  
development:
  <<: *default_settings
  open: true

test:
  <<: *default_settings
  # In order to run tests using: bundle exec rspec
  # you must first setup the test database using:
  # createdb -U canvas canvas_test
  # psql -c 'GRANT ALL PRIVILEGES ON DATABASE canvas_test TO canvas' -d canvas_test
  # psql -c 'GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO canvas' -d canvas_test
  # psql -c 'GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO canvas' -d canvas_test
  # RAILS_ENV=test bundle exec rails db:test:reset
  database: canvas_test # Note: if DATABASE_URL is set, this is ignored and hard-coded in config/application.rb

staging:
  <<: *default_settings

production:
  <<: *default_settings
